{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAmBC,SAASC,cAAc,yBAC1CC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAItC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUS,MAAAR,IAEpBG,EAAO,C,SAAEJ,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAXbR,EAAiBiB,iBAAiB,SAclC,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,GAAcjB,EAAMkB,MACpBC,GAAalB,EAAKiB,MAClBE,GAAelB,EAAOgB,MAC1B,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAaC,GAAY,EAC1DlB,EAAckB,EAAUJ,GACrBK,MAAK,EAAClB,SAAEA,EAAUS,MAAAU,MACjBC,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBmB,MAAU,IAGnDI,OAAM,EAACvB,SAAEA,EAAUS,MAAAe,MAClBJ,EAAA7B,GAAS8B,OAAOI,QACd,sBAAoBzB,QAAewB,MAAU,IAGnDX,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from \"notiflix\";\n\nconst btnCreatePromise = document.querySelector('button[type=\"submit\"]');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nbtnCreatePromise.addEventListener(\"click\", onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delayInput = +delay.value;\n  let stepInput = +step.value;\n  let amountInput = +amount.value;\n  for (let position = 1; position <= amountInput; position += 1) {\n    createPromise(position, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayInput += stepInput;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$btnCreatePromise","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","evt","preventDefault","delayInput","value","stepInput","amountInput","position1","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure"],"version":3,"file":"03-promises.4164df4b.js.map"}